// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
  userCompany UserCompany[]
  userRole UserRole[]
}

model Company {
  id Int @id @default(autoincrement())
  name String @unique

  userCompany UserCompany[]

  companyRole CompanyRole[]
}

model UserCompany {
  user User @relation(fields: [userId], references: [id])
  userId Int
  company Company @relation(fields: [companyId], references: [id])
  companyId Int

  @@id([userId,companyId])
}


model Role {
  id Int @id @default(autoincrement())
  name String

  userRole UserRole[]

  companyRole CompanyRole[]
}

model UserRole {
  user User @relation(fields: [userId], references: [id])
  userId Int
  role Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])

}

model CompanyRole {
  company Company @relation(fields: [companyId], references: [id])
  companyId Int
  role Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([companyId, roleId])
}

model Cliente {
  id                            Int                  @id @default(autoincrement())
  name                          String
  cpf                           String               @unique
  address                       String?
  email                         String               @unique
  phoneNumber                   String?
  facebook                      String?
  instagram                     String?
  whatsapp                      String?
  personalPhoneNumber           String
  jobTitle                      String?
  jobPosition                   String?
  grossIncome                   Float?
  netIncome                     Float?
  hasFinancing                  Boolean
  hasFGTS                       Boolean
  sellingPotentialTag           SellingPotential?
  maritalStatus                 String?
  familyMembersAmount           Int?
  description                   String?
  preferredMeansOfCommunication MeansOfCommunication @default(Whatsapp)
  hasBeenContacted              Boolean              @default(false)
  status                        Status               @default(ACTIVE)
  birthDate                     DateTime
  createdAt                     DateTime             @default(now())
  updatedAt                     DateTime             @updatedAt

  @@map("clientes")
}

enum MeansOfCommunication {
  Whatsapp
  Chamada
}

enum Status {
  ACTIVE
  INACTIVE
}

enum SellingPotential {
  Interessado
  EmNegociacao
  AltaProbabilidade
  Perdido
  ContratoAssinado
}
